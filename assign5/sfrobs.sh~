#!/bin/sh

error_exit() {
    echo "$1" >&2
    exit 1
}

PARAMS=""
ignoreCase=0
while [ -n "$1" ]; do
    case "$1" in
	-f) ignoreCase=1
	    echo "-f option passed" ;;
	-*) error_exit "Invalid option '$1'" ;;
	*)
	    PARAMS="$PARAMS $1"
	    ;;
    esac
    shift
done

PARAMS=${PARAMS#* }
echo "$PARAMS"
for param in "$PARAMS"; do
    if [ -n "$param" ]
    then
	if [ "$ignoreCase" == 0 ]
	then
	    error_exit "Invalid argument '${param% *}'"
	fi
	error_exit "Extra operand '${param% *}'"
	break
    fi
done

encode=""
decode=""

octal=0
tr_octal_1=([0]=2 [1]=3 [2]=0 [3]=1 [4]=6 [5]=7 [6]=4 [7]=5);
tr_octal_2=([0]=5 [1]=4 [2]=7 [3]=6 [4]=1 [5]=0 [6]=3 [7]=2);
while [ "$octal" -le 177 ]
do
    encode="$encode\\$octal"
    (( mod=octal%10 ))
    hundreds=0
    if [ "$octal" -ge 100 ]
    then
	hundreds=100
	(( omod=((octal-$mod)/10)%10 ))
    else
	(( omod=(octal-$mod)/10 ))
    fi
    echo "omod: $omod"
    ones="${tr_octal_1[$mod]}"
    tens="${tr_octal_2[$omod]}"
    echo "tens: $tens"
    (( tens=tens*10 ))
    (( tr_octal="$hundreds"+"$tens"+"$ones" ))
    echo "$tr_octal"
    
    if [ "$mod" == 7 ]
    then
	(( octal=octal+3 ))
    fi
    (( octal=octal+1 ))
done
echo "$encode"

tr_octal=0
octal=0
#while [ "$octal" - le
